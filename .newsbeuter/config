####################################
# newsbeuter example configuration #
####################################

## configuration option: always-display-description
## description: If true, then the description will always displayed even if e.g. a content:encoded tag has been found.
## parameter syntax: [true/false]
always-display-description true

## always-download (parameters: <rssurl> [<rssurl>]; default
## value: n/a)
## The parameters of this configuration command are one or
## more RSS URLs. These URLs will always get downloaded,
## regardless of their Last-Modified timestamp and ETag
## header. (example: always-download
## "http://www.n-tv.de/23.rss")

## configuration option: article-sort-order
## description: The sortfield specifies which article property shall be used for sorting (currently available: date, title, flags, author, link, guid). The optional direction specifies the sort direction ("asc" specifies ascending sorting, "desc" specifies descending sorting. for date, "desc" is default, for all others, "asc" is default).
## parameter syntax: <sortfield>[-<direction>]
article-sort-order date-asc

## configuration option: articlelist-format
## description: This variable defines the format of entries in the article list. See the respective section in the documentation for more information on format strings.
## parameter syntax: <format>
articlelist-format "%f %4i %D  %L  %?T?|%-17T|  ?%t"

## configuration option: auto-reload
## description: If enabled, all feeds will be automatically reloaded at start up and then continuously after a certain time has passed (see reload-time).
## parameter syntax: [yes/no]
auto-reload no

## configuration option: bookmark-cmd
## description: If set, then <bookmark-command> will be used as bookmarking plugin. See the documentation on bookmarking for further information.
## parameter syntax: <bookmark-command>
bookmark-cmd "~/bin/newsbeuter2taskum"

## configuration option: bookmark-interactive
## description: If set to yes, then the configured bookmark command is an interactive program.
## parameter syntax: [yes/no]
bookmark-interactive no

## configuration option: bookmark-autopilot
## description: If set to yes, the configured bookmark command is executed without any further input asked from user, uless the url or the title cannot be found/guessed.
## parameter syntax: [yes/no]
bookmark-autopilot no

## configuration option: browser
## description: Set the browser command to use when opening an article in the browser. If <browser-command> contains %u, it will be used as complete commandline and %u will be replaced with the URL that shall be opened.
## parameter syntax: <browser-command>
browser "daemonize x-web-browser %u"

## configuration option: cache-file
## description: This configuration option sets the cache file. This is especially useful if the filesystem of your home directory doesn't support proper locking (e.g. NFS).
## parameter syntax: <path>
cache-file "~/.newsbeuter/newsbeuter_cache.db"

## configuration option: cleanup-on-quit
## description: If yes, then the cache gets locked and superfluous feeds and items are removed, such as feeds that can't be found in the urls configuration file anymore.
## parameter syntax: [yes/no]
cleanup-on-quit yes

## configuration option: confirm-exit
## description: If set to yes, then newsbeuter will ask for confirmation whether the user really wants to quit newsbeuter.
## parameter syntax: [yes/no]
confirm-exit no

## cookie-cache (parameters: <file>; default value: "")
## Set a cookie cache. If set, then cookies will be cached
## (i.e. read from and written to) in this file. (example:
## cookie-cache "~/.newsbeuter/cookies.txt")
cookie-cache "~/.newsbeuter/newsbeuter_cookies.txt"

## configuration option: datetime-format
## description: This format specifies the date/time format in the article list. For a detailed documentation on the allowed formats, consult the manpage of strftime(3).
## parameter syntax: <date/time format>
datetime-format "%Y-%m-%d"

## delete-read-articles-on-quit (parameters: [yes/no]; default
## value: "no")
## If set to "yes", then all read articles will be deleted
## when you quit newsbeuter. (example:
## delete-read-articles-on-quit yes)
delete-read-articles-on-quit no

## configuration option: display-article-progress
## description: If set to yes, then a read progress (in percent) is displayed in the article view. Otherwise, no read progress is displayed.
## parameter syntax: [yes/no]
display-article-progress yes

## configuration option: download-retries
## description: How many times newsbeuter shall try to successfully download a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy.
## parameter syntax: <number retries>
download-retries 2

## download-full-page (parameters: [yes/no]; default value: no)
## If set to yes, then for all feed items with no content but
## with a link, the link is downloaded and the result used as
## content instead. This may significantly increase the
## download times of "empty" feeds. (example:
## download-full-page yes)
download-full-page no

## configuration option: download-timeout
## description: The number of seconds newsbeuter shall wait when downloading a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy.
## parameter syntax: <seconds>
download-timeout 30

## configuration option: error-log
## description: If set, then user errors (e.g. errors regarding defunct RSS feeds) will be logged to this file.
## parameter syntax: <path>
error-log "~/var/log/newsbeuter_error.log"

## external-url-viewer (parameters: <command>; default value: "")
## If set, then "show-urls" will pipe the current article to a
## specific external tool instead of using the internal URL
## viewer. This can be used to integrate tools such as
## urlview. (example: external-url-viewer "urlview")

## configuration option: feed-sort-order
## description: If set to "firsttag", the feeds in the feed list will be sorted by their first tag in the urls file.
## parameter syntax: <sortorder>
feed-sort-order firsttag

## configuration option: feedlist-format
## description: This variable defines the format of entries in the feed list. See the respective section in the documentation for more information on format strings.
## parameter syntax: <format>
feedlist-format "%S %n %4i %11u %T %t"

## configuration option: googlereader-flag-share/oldreader-flag-share
## description: If this is set and Google Reader support is used, then all articles that are flagged with the specified flag are being "shared" in Google Reader so that people that follow you can see it.
## parameter syntax: <flag>
# googlereader-flag-share ""

## configuration option: googlereader-flag-star/oldreader-flag-star
## description: If this is set and Google Reader support is used, then all articles that are flagged with the specified flag are being "starred" in Google Reader and appear in the list of "Starred items".
## parameter syntax: <flag>
# googlereader-flag-star ""

## configuration option: googlereader-login/oldreader-login
## description: This variable sets your Google Reader login for the Google Reader support.
## parameter syntax: <login>
# googlereader-login ""

## configuration option: googlereader-min-items/oldreader-login/oldreader-min-items
## description: This variable sets the number of articles that are loaded from Google Reader per feed.
## parameter syntax: <number>
# googlereader-min-items 20

## configuration option: googlereader-password/oldreader-password
## description: This variable sets your Google Reader password for the Google Reader support.
## parameter syntax: <password>
# googlereader-password ""

## oldreader-passwordfile (parameters: <path-to-file; default
## value: "")
## A more secure alternative to the above, by storing your
## password elsewhere in your system. (example:
## oldreader-passwordfile "path-to-file")

## configuration option: googlereader-show-special-feeds/oldreader-show-special-feeds
## description: If this is set, then "special feeds" like "People you follow" (articles shared by people you follow), "Starred items" (your starred articles), "Shared items" (your shared articles) and "Popular items" (articles considered to be popular by Google's magic algorithms) appear in your subscription list.
## parameter syntax: [yes/no]
# googlereader-show-special-feeds yes

## configuration option: goto-first-unread
## description: If set to yes (the default), then the first unread article will be selected whenever a feed is entered.
## parameter syntax: [yes/no]
goto-first-unread no

## configuration option: goto-next-feed
## description: If set to yes, then the next-unread and prev-unread keys will search in other feeds for unread articles if all articles in the current feed are read. If set to no, then the next-unread and prev-unread keys will stop in the current feed.
## parameter syntax: [yes/no]
goto-next-feed no

## configuration option: history-limit
## description: Defines the maximum number of entries of commandline resp. search history to be saved. To disable history saving, set history-limit to 0.
## parameter syntax: <number>
history-limit 300

## configuration option: html-renderer
## description: If set to "internal", then the internal HTML renderer will be used. Otherwise, the specified command will be executed, the HTML to be rendered will be written to the command's stdin, and the program's output will be displayed. This makes it possible to use other, external programs, such as w3m, links or lynx, to render HTML.
## parameter syntax: <path>
html-renderer internal

## http-auth-method (parameters: <method>; default value: any)
## Set HTTP authentication method. Allowed values: any, basic,
## digest, digest_ie (only available with libcurl 7.19.3 and
## newer), gssnegotiate, ntlm, anysafe. (example:
## http-auth-method digest)
http-auth-method any

## configuration option: ignore-mode
## description: This configuration option defines in what way an article is ignored (see ignore-article). If set to "download", then it is ignored in the download/parsing phase (which is the default) and thus never written to the cache, if it set to "display", it is ignored when displaying articles but is kept in the cache.
## parameter syntax: [download/display]
ignore-mode download

## configuration option: keep-articles-days
## description: If set to a number greater than 0, only articles that are were published within the last <n> days are kept, and older articles are deleted. If set to 0 (default value), this option is not active.
## parameter syntax: <days>
keep-articles-days 0

## configuration option: mark-as-read-on-hover
## description: If set to yes, then all articles that get selected in the article list are marked as read.
## parameter syntax: [yes/no]
mark-as-read-on-hover yes

## max-download-speed (parameters: <number>; default value: 0)
## If set to a number great than 0, the download speed per
## download is set to that limit (in kB). (example:
## max-download-speed 50)
max-download-speed 0

## configuration option: max-items
## description: Set the number of articles to maximally keep per feed. If the number is set to 0, then all articles are kept.
## parameter syntax: <number>
max-items 0

## configuration option: notify-format
## description: Format string that is used for formatting notifications. See the chapter on format strings for more information.
## parameter syntax: <string>
notify-format "%d new articles (%n unread articles, %f unread feeds)"

## configuration option: notify-program
## description: If set, then the configured program will be executed if new articles arrived (through a reload) or if notify-always is true. The first parameter of the called program contains the notification message.
## parameter syntax: <path>
# notify-program ""

## configuration option: notify-always
## description: If no, notifications will only be made when there are new feeds or articles. If yes, notifications will be made regardless.
## parameter syntax: [yes/no]
notify-always no

## configuration option: notify-screen
## description: If yes, then a "privacy message" will be sent to the terminal, containing a notification message about new articles. This is especially useful if you use terminal emulations such as GNU screen which implement privacy messages.
## parameter syntax: [yes/no]
notify-screen no

## configuration option: notify-xterm
## description: If yes, then the xterm window title will be set to a notification message about new articles.
## parameter syntax: [yes/no]
notify-xterm no

## configuration option: notify-beep
## description: If yes, then the speaker beep on new articles.
## parameter syntax: [yes/no]
notify-beep no

## configuration option: opml-url
## description: If the OPML online subscription mode is enabled, then the list of feeds will be taken from the OPML file found on this location. Optionally, you can specify more than one URL. All the listed OPML URLs will then be taken into account when loading the feed list.
## parameter syntax: <url> ...
# opml-url ""

## configuration option: pager
## description: If set to "internal", then the internal pager will be used. Otherwise, the article to be displayed will be rendered to be a temporary file and then displayed with the configured pager. If the pager path is set to an empty string, the content of the "PAGER" environment variable will be used. If the pager path contains a placeholder "%f", it will be replaced with the temporary filename.
## parameter syntax: [<path>/internal]
pager internal

## configuration option: podcast-auto-enqueue
## description: If yes, then all podcast URLs that are found in articles are added to the podcast download queue. See the respective section in the documentation for more information on podcast support in newsbeuter.
## parameter syntax: [yes/no]
podcast-auto-enqueue no

## configuration option: prepopulate-query-feeds
## description: If yes, then all query feeds are prepopulated with articles on startup.
## parameter syntax: [yes/no]
prepopulate-query-feeds no

## proxy (parameters: <server:port>; default value: n/a)
## Set the proxy to use for downloading RSS feeds. (example:
## proxy localhost:3128)

## proxy-auth (parameters: <auth>; default value: n/a)
## Set the proxy authentication string. (example: proxy-auth
## user:password)

## configuration option: proxy-auth-method
## description: Set proxy authentication method. Allowed values: any, basic, digest, digest_ie (only available with libcurl 7.19.3 and newer), gssnegotiate, ntlm, anysafe.
## parameter syntax: <method>
# proxy-auth-method any

## configuration option: proxy-type
## description: Set proxy type. Allowed values: http, socks4, socks4a, socks5.
## parameter syntax: <type>
# proxy-type http

## configuration option: refresh-on-startup
## description: If yes, then all feeds will be reloaded when newsbeuter starts up. This is equivalent to the -r commandline option.
## parameter syntax: [yes/no]
refresh-on-startup no

## configuration option: reload-only-visible-feeds
## description: If yes, then manually reloading all feeds will only reload the currently visible feeds, e.g. if a filter or a tag is set.
## parameter syntax: [yes/no]
reload-only-visible-feeds no

## configuration option: reload-time
## description: The number of minutes between automatic reloads.
## parameter syntax: <number>
reload-time 60

## configuration option: reload-threads
## description: The number of parallel reload threads that shall be started when all feeds are reloaded.
## parameter syntax: <number>
reload-threads 1

## configuration option: save-path
## description: The default path where articles shall be saved to. If an invalid path is specified, the current directory is used.
## parameter syntax: <path>
save-path "/home/files/tmp/downloads"

## configuration option: search-highlight-colors
## description: This configuration command specifies the highlighting colors when searching for text from the article view.
## parameter syntax: <fgcolor> <bgcolor> [<attribute> ...]
search-highlight-colors red black bold

## configuration option: show-keymap-hint
## description: If no, then the keymap hints on the bottom of screen will not be displayed.
## parameter syntax: [yes/no]
show-keymap-hint yes

## configuration option: show-read-feeds
## description: If yes, then all feeds, including those without unread articles, are listed. If no, then only feeds with one or more unread articles are list.
## parameter syntax: [yes/no]
show-read-feeds yes

## configuration option: show-read-articles
## description: If yes, then all articles of a feed are listed in the article list. If no, then only unread articles are listed.
## parameter syntax: [yes/no]
show-read-articles yes

## configuration option: suppress-first-reload
## description: If yes, then the first automatic reload will be suppressed if auto-reload is set to yes.
## parameter syntax: [yes/no]
suppress-first-reload no

## configuration option: swap-title-and-hints
## description: If yes, then the title at the top of screen and keymap hints at the bottom of screen will be swapped.
## parameter syntax: [yes/no]
swap-title-and-hints no

## configuration option: text-width
## description: If set to a number greater than 0, then all HTML will be rendered to this maximum line length. If set to 0, the terminal width will be used.
## parameter syntax: <number>
text-width 80

## ttrss-flag-publish (parameters: <character>; default value: "")
## If this is set and Tiny Tiny RSS support is used, then all
## articles that are flagged with the specified flag are being
## marked as "published" in Tiny Tiny RSS. (example:
## ttrss-flag-publish "b")

## ttrss-flag-star (parameters: <character>; default value: "")
## If this is set and Tiny Tiny RSS support is used, then all
## articles that are flagged with the specified flag are being
## "starred" in Tiny Tiny RSS. (example: ttrss-flag-star "a")

## ttrss-login (parameters: <username>; default value: "")
## Sets the username for use with Tiny Tiny RSS. (example:
## ttrss-login "admin")

## ttrss-mode (parameters: [multi/single]; default value: multi)
## Configures the mode in which Tiny Tiny RSS is used. In
## single-user mode, login and password are used for HTTP
## authentication, while in multi-user mode, they are used for
## authenticating with Tiny Tiny RSS. (example: ttrss-mode
## "single")

## ttrss-password (parameters: <password>; default value: "")
## Configures the password for use with Tiny Tiny RSS.
## (example: ttrss-password "mypassword")

## ttrss-passwordfile (parameters: <path-to-file; default value:
## "")
## A more secure alternative to the above, by storing your
## password elsewhere in your system. (example:
## ttrss-passwordfile "path-to-file")

## ttrss-url (parameters: <url>; default value: "")
## Configures the URL where the Tiny Tiny RSS installation you
## want to use resides. (example: ttrss-url
## "http://example.com/ttrss/")

## configuration option: urls-source
## description: This configuration command sets the source where URLs shall be retrieved from. By default, this is ~/.newsbeuter/urls. Alternatively, you can set it to "opml", which enables newsbeuter's OPML online subscription mode, or to "googlereader", which enables newsbeuter's Google Reader support. In order to make Google Reader support work correctly, you also need to set googlereader-login and googlereader-password.
## parameter syntax: <source>
urls-source "local"

## configuration option: use-proxy
## description: If yes, then the configured proxy will be used for downloading the RSS feeds.
## parameter syntax: [yes/no]
use-proxy no

## configuration option: user-agent
## description: If set to a non-zero-length string, this value will be used as HTTP User-Agent header for all HTTP requests.
## parameter syntax: <user agent string>
# user-agent ""

########################################################################

## include (parameters: <path>; default value: n/a)
## With this command, you can include other files to be
## interpreted as configuration files. This is especially
## useful to separate your configuration into several files,
## e.g. key configuration, color configuration, ... (example:
## include "~/.newsbeuter/colors")

## FILTERS
## define-filter (parameters: <name> <filter>; default value: n/a)
## With this command, you can predefine filters, which you can
## later select from a list, and which are then applied after
## selection. This is especially useful for filters that you
## need often and you don’t want to enter them every time you
## need them. (example: define-filter "all feeds with fun tag"
## "tags # \\"fun\\"")

## ignore-article (parameters: <feed> <filterexpr>; default value:
## n/a)
## If a downloaded article from <feed> matches <filterexpr>,
## then it is ignored and not presented to the user. This
## command is further explained in the "kill file" section
## below. (example: ignore-article "*" "title =~
## \\"Windows\\"")

## KEYBINDINGS
## bind-key (parameters: <key> <operation> [<dialog>]; default
## value: n/a)
## Bind key <key> to <operation>. This means that whenever
## <key> is pressed, then <operation> is executed (if
## applicable in the current dialog). A list of available
## operations can be found below. Optionally, you can specify
## a dialog. If you specify one, the key binding will only be
## added to the specified dialog. Available dialogs are "all"
## (default if none is specified), "feedlist", "filebrowser",
## "help", "articlelist", "article", "tagselection",
## "filterselection", "urlview" and "podbeuter". (example:
## bind-key ^R reload-all)

bind-key j down all
bind-key k up all

## unbind-key (parameters: <key> [<dialog>]; default value: n/a)
## Unbind key <key>. This means that no operation is called
## when <key> is pressed. Optionally, you can specify a dialog
## (for a list of available dialogs, see "bind-key" above). If
## you specify one, the key binding will only be unbound for
## the specified dialog. (example: unbind-key R)

## MACROS
## macro (parameters: <macro key> <command list>; default value:
## n/a)
## With this command, you can define a macro key and specify a
## list of commands that shall be executed when the macro
## prefix and the macro key are pressed. (example: macro k
## open ; reload ; quit)
macro o open-in-browser ; toggle-article-read "read"

## PODBEUTER
download-path "/home/files/tmp/downloads/podcasts/%h/%n"
max-downloads 3
player "daemonize x-audio-player"

## HIGHLIGHTING
## highlight (parameters: <target> <regex> <fgcolor> [<bgcolor>
## [<attribute> ...]]; default value: n/a)
## With this command, you can highlight text parts in the feed
## list, the article list and the article view. For a detailed
## documentation, see the chapter on highlighting. (example:
## highlight all "newsbeuter" red)

highlight article "^(Title):.*$" blue default
highlight article "https?://[^ ]+" red default
highlight article "\\[image\\ [0-9]+\\]" green default

## highlight-article (parameters: <filterexpr> <fgcolor> <bgcolor>
## [<attribute> ...]; default value: n/a)
## With this command, you can highlight articles in the
## article list if they match a filter expression. For a
## detailed documentation, see the chapter on highlighting.
## (example: highlight-article "author =~ \\"Andreas
## Krennmair\\"" white red bold)

## COLOR
## color (parameters: <element> <fgcolor> <bgcolor> [<attr> ...];
## default value: n/a)
## Set the foreground color, background color and optional
## attributes for a certain element (example: color background
## white black)

color article default default
color background default default
color info default black reverse
color listfocus black green
color listfocus_unread black green
color listnormal default default
color listnormal_unread default default

## DIALOGS
articlelist-title-format "Feed: %T (%u unread, %t total) %U"
dialogs-title-format "Dialogs"
feedlist-title-format "Feeds: %u unread, %t total %?T? - tag ‘%T’&?"
filebrowser-title-format "%?O?Open File&Save File? - %f"
help-title-format "Help"
itemview-title-format "Article: %T"
searchresult-title-format "Search result (%u unread, %t total)"
selectfilter-title-format "Select Filter"
selecttag-title-format "Select Tag"
urlview-title-format "URLs"
